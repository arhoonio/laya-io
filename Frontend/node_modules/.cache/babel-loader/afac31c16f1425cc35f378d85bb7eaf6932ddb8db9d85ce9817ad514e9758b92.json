{"ast":null,"code":"var _jsxFileName = \"/Users/arjunmuralikrishnan/Developer/GitHub/laya-io/src/Input/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MdClose } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = props => {\n  _s();\n  const [tags, setTags] = React.useState([]);\n  const handleTags = event => {\n    if (event.key === \"Enter\" && event.target.value !== \"\") {\n      setTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    } else if (event.key === \"Backspace\" && tags.length && event.target.value == 0) {\n      const tagsCopy = [...tags];\n      tagsCopy.pop();\n      event.preventDefault();\n      setTags(tagsCopy);\n    } else if (tags.length < 1 && event.key === \"Backspace\") {\n      setError(\"Since there is no tags you can't able to delete any tags\");\n    } else if (event.target.value == \"\" && event.key === \"Enter\") {\n      setError(\"The tag should be one character long!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tags\",\n    children: [tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-tag\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyDown: event => handleTags(event),\n      placeholder: \"Write some tag and press enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_s(Index, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","MdClose","jsxDEV","_jsxDEV","Index","props","_s","tags","setTags","handleTags","event","key","target","value","length","tagsCopy","pop","preventDefault","setError","className","children","map","tag","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["/Users/arjunmuralikrishnan/Developer/GitHub/laya-io/src/Input/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MdClose } from \"react-icons/md\"\n\nconst Index = (props) => {\n\n    const [tags, setTags] = React.useState([]);\n\n    const handleTags =  event => {\n        if (event.key === \"Enter\" && event.target.value !== \"\") {\n            setTags([...tags, event.target.value]);\n            event.target.value = \"\";\n        }\n        else if (event.key === \"Backspace\" && tags.length && event.target.value == 0){\n            const tagsCopy = [...tags];\n            tagsCopy.pop();\n            event.preventDefault();\n            setTags(tagsCopy);\n        }\n        else if(tags.length < 1 && event.key === \"Backspace\"){\n            setError(\"Since there is no tags you can't able to delete any tags\");\n        }\n        else if(event.target.value == \"\" && event.key === \"Enter\"){\n            setError(\"The tag should be one character long!\");\n        }\n    };\n\n    return <div className=\"tags\">\n        {tags.map((tag, index) => (\n            <div className=\"single-tag\" key={index}>\n                <span>{tag}</span>\n                <i> <MdClose /> </i>\n            </div>\n        ))}\n        \n        <input\n            type=\"text\"\n            onKeyDown={event => handleTags(event)}\n            placeholder=\"Write some tag and press enter\"\n        />\n    </div>\n};\nexport default Index;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,UAAU,GAAIC,KAAK,IAAI;IACzB,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,IAAID,KAAK,CAACE,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MACpDL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEG,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACtCH,KAAK,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE;IAC3B,CAAC,MACI,IAAIH,KAAK,CAACC,GAAG,KAAK,WAAW,IAAIJ,IAAI,CAACO,MAAM,IAAIJ,KAAK,CAACE,MAAM,CAACC,KAAK,IAAI,CAAC,EAAC;MACzE,MAAME,QAAQ,GAAG,CAAC,GAAGR,IAAI,CAAC;MAC1BQ,QAAQ,CAACC,GAAG,CAAC,CAAC;MACdN,KAAK,CAACO,cAAc,CAAC,CAAC;MACtBT,OAAO,CAACO,QAAQ,CAAC;IACrB,CAAC,MACI,IAAGR,IAAI,CAACO,MAAM,GAAG,CAAC,IAAIJ,KAAK,CAACC,GAAG,KAAK,WAAW,EAAC;MACjDO,QAAQ,CAAC,0DAA0D,CAAC;IACxE,CAAC,MACI,IAAGR,KAAK,CAACE,MAAM,CAACC,KAAK,IAAI,EAAE,IAAIH,KAAK,CAACC,GAAG,KAAK,OAAO,EAAC;MACtDO,QAAQ,CAAC,uCAAuC,CAAC;IACrD;EACJ,CAAC;EAED,oBAAOf,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,GACvBb,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACjBpB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBjB,OAAA;QAAAiB,QAAA,EAAOE;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClBxB,OAAA;QAAAiB,QAAA,GAAG,GAAC,eAAAjB,OAAA,CAACF,OAAO;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAFSJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjC,CACR,CAAC,eAEFxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEnB,KAAK,IAAID,UAAU,CAACC,KAAK,CAAE;MACtCoB,WAAW,EAAC;IAAgC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAACrB,EAAA,CArCIF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}